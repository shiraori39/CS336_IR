{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tai lieu hoc\\\\Truy van thong tin da phuong tien\\\\CS336_IR\\\\retrieval_system\\\\src\\\\Components\\\\result.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Grid, Card, CardMedia, CardContent, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageList = () => {\n  _s();\n  const [imageList, setImageList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('YOUR_API_ENDPOINT');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setImageList(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Image List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: imageList.map((image, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            alt: `Image ${index}`,\n            height: \"150\",\n            image: image.url // Replace 'url' with the actual property name in your API response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageList, \"Q0Vs3QOxZ+1eqbd3cAgE4GWR8QU=\");\n_c = ImageList;\nexport default ImageList;\nvar _c;\n$RefreshReg$(_c, \"ImageList\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Card","CardMedia","CardContent","Typography","jsxDEV","_jsxDEV","ImageList","_s","imageList","setImageList","fetchData","response","fetch","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","image","index","item","xs","sm","md","lg","component","alt","height","url","variant","color","_c","$RefreshReg$"],"sources":["D:/Tai lieu hoc/Truy van thong tin da phuong tien/CS336_IR/retrieval_system/src/Components/result.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Card, CardMedia, CardContent, Typography} from '@mui/material';\r\n\r\nconst ImageList = () => {\r\n    const [imageList, setImageList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('YOUR_API_ENDPOINT');\r\n                if(!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n\r\n                const data = await response.json();\r\n                setImageList(data);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n          <h2>Image List</h2>\r\n          <Grid container spacing={2}>\r\n            {imageList.map((image, index) => (\r\n              <Grid item key={index} xs={12} sm={6} md={4} lg={3}>\r\n                <Card>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt={`Image ${index}`}\r\n                    height=\"150\"\r\n                    image={image.url} // Replace 'url' with the actual property name in your API response\r\n                  />\r\n                  <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n                      {/* Additional information about the image */}\r\n                      {/* For example: <p>{image.description}</p> */}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default ImageList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;QACjD,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;UACb,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAClD;QAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,YAAY,CAACM,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAEDP,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EACN,oBACIL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA,CAACN,IAAI;MAACyB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAN,QAAA,EACxBX,SAAS,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1BvB,OAAA,CAACN,IAAI;QAAC8B,IAAI;QAAaC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAd,QAAA,eACjDd,OAAA,CAACL,IAAI;UAAAmB,QAAA,gBACHd,OAAA,CAACJ,SAAS;YACRiC,SAAS,EAAC,KAAK;YACfC,GAAG,EAAG,SAAQP,KAAM,EAAE;YACtBQ,MAAM,EAAC,KAAK;YACZT,KAAK,EAAEA,KAAK,CAACU,GAAI,CAAC;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eACFlB,OAAA,CAACH,WAAW;YAAAiB,QAAA,eACVd,OAAA,CAACF,UAAU;cAACmC,OAAO,EAAC,OAAO;cAACC,KAAK,EAAC,eAAe;cAACL,SAAS,EAAC;YAAK;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGrD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAdOK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAef,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChB,EAAA,CA7CID,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}